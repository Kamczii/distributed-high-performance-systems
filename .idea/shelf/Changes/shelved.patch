Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision 2e9fb2837aa01a04b3b46f788baa26a83567d77d)
+++ /dev/null	(revision 2e9fb2837aa01a04b3b46f788baa26a83567d77d)
@@ -1,8 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
-# Editor-based HTTP Client requests
-/httpRequests/
-# Datasource local storage ignored files
-/dataSources/
-/dataSources.local.xml
Index: .idea/jpa-buddy.xml
===================================================================
diff --git a/.idea/jpa-buddy.xml b/.idea/jpa-buddy.xml
deleted file mode 100644
--- a/.idea/jpa-buddy.xml	(revision 2e9fb2837aa01a04b3b46f788baa26a83567d77d)
+++ /dev/null	(revision 2e9fb2837aa01a04b3b46f788baa26a83567d77d)
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="JpaBuddyIdeaProjectConfig">
-    <option name="defaultUnitInitialized" value="true" />
-    <option name="renamerInitialized" value="true" />
-  </component>
-</project>
\ No newline at end of file
Index: OfferRead/src/main/java/pl/rsww/offerread/offers/getting_offers/OfferShortInfoProjection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OfferRead/src/main/java/pl/rsww/offerread/offers/getting_offers/OfferShortInfoProjection.java b/OfferRead/src/main/java/pl/rsww/offerread/offers/getting_offers/OfferShortInfoProjection.java
new file mode 100644
--- /dev/null	(date 1712386667174)
+++ b/OfferRead/src/main/java/pl/rsww/offerread/offers/getting_offers/OfferShortInfoProjection.java	(date 1712386667174)
@@ -0,0 +1,14 @@
+package pl.rsww.offerread.offers.getting_offers;
+
+import org.springframework.data.mongodb.repository.MongoRepository;
+import org.springframework.stereotype.Component;
+import pl.rsww.offerread.projections.MongoProjection;
+
+import java.util.UUID;
+
+@Component
+public class OfferShortInfoProjection extends MongoProjection<OfferShortInfo, UUID> {
+    public OfferShortInfoProjection(MongoRepository<OfferShortInfo, UUID> repository) {
+        super(repository);
+    }
+}
Index: OfferRead/src/main/java/pl/rsww/offerread/offers/getting_offers/OfferShortInfoRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OfferRead/src/main/java/pl/rsww/offerread/offers/getting_offers/OfferShortInfoRepository.java b/OfferRead/src/main/java/pl/rsww/offerread/offers/getting_offers/OfferShortInfoRepository.java
new file mode 100644
--- /dev/null	(date 1712386667195)
+++ b/OfferRead/src/main/java/pl/rsww/offerread/offers/getting_offers/OfferShortInfoRepository.java	(date 1712386667195)
@@ -0,0 +1,9 @@
+package pl.rsww.offerread.offers.getting_offers;
+
+import org.springframework.data.mongodb.repository.MongoRepository;
+
+import java.util.UUID;
+
+public interface OfferShortInfoRepository extends MongoRepository<OfferShortInfo, UUID> {
+
+}
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
new file mode 100644
--- /dev/null	(date 1712394540170)
+++ b/.idea/gradle.xml	(date 1712394540170)
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GradleMigrationSettings" migrationVersion="1" />
+  <component name="GradleSettings">
+    <option name="linkedExternalProjectsSettings">
+      <GradleProjectSettings>
+        <option name="externalProjectPath" value="$PROJECT_DIR$/EurekaServer" />
+        <option name="modules">
+          <set>
+            <option value="$PROJECT_DIR$/EurekaServer" />
+          </set>
+        </option>
+      </GradleProjectSettings>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/dataSources.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources.xml b/.idea/dataSources.xml
new file mode 100644
--- /dev/null	(date 1712389939693)
+++ b/.idea/dataSources.xml	(date 1712389939693)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="DataSourceManagerImpl" format="xml" multifile-model="true">
+    <data-source source="LOCAL" name="offer_read_model@localhost" uuid="2f93774f-cceb-4247-a870-0bff4b3e73b7">
+      <driver-ref>mongo</driver-ref>
+      <synchronize>true</synchronize>
+      <imported>true</imported>
+      <jdbc-driver>com.dbschema.MongoJdbcDriver</jdbc-driver>
+      <jdbc-url>mongodb://localhost:27017/offer_read_model</jdbc-url>
+      <jdbc-additional-properties>
+        <property name="com.intellij.clouds.kubernetes.db.host.port" />
+        <property name="com.intellij.clouds.kubernetes.db.enabled" value="false" />
+        <property name="com.intellij.clouds.kubernetes.db.container.port" />
+      </jdbc-additional-properties>
+      <working-dir>$ProjectFileDir$</working-dir>
+    </data-source>
+  </component>
+</project>
\ No newline at end of file
Index: OfferRead/src/main/java/pl/rsww/offerread/offers/getting_offers/OfferShortInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OfferRead/src/main/java/pl/rsww/offerread/offers/getting_offers/OfferShortInfo.java b/OfferRead/src/main/java/pl/rsww/offerread/offers/getting_offers/OfferShortInfo.java
new file mode 100644
--- /dev/null	(date 1712386667153)
+++ b/OfferRead/src/main/java/pl/rsww/offerread/offers/getting_offers/OfferShortInfo.java	(date 1712386667153)
@@ -0,0 +1,17 @@
+package pl.rsww.offerread.offers.getting_offers;
+
+import pl.rsww.offerread.events.EventMetadata;
+import pl.rsww.offerread.views.VersionedView;
+
+public class OfferShortInfo implements VersionedView {
+
+    @Override
+    public long getLastProcessedPosition() {
+        return 0;
+    }
+
+    @Override
+    public void setMetadata(EventMetadata eventMetadata) {
+
+    }
+}
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile default=\"true\" name=\"Default\" enabled=\"true\" />\r\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <module name=\"OfferWrite\" />\r\n        <module name=\"OfferRead\" />\r\n        <module name=\"Gateway\" />\r\n      </profile>\r\n    </annotationProcessing>\r\n  </component>\r\n  <component name=\"JavacSettings\">\r\n    <option name=\"ADDITIONAL_OPTIONS_OVERRIDE\">\r\n      <module name=\"Gateway\" options=\"-parameters\" />\r\n      <module name=\"OfferRead\" options=\"-parameters\" />\r\n      <module name=\"OfferWrite\" options=\"-parameters\" />\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	(revision 2e9fb2837aa01a04b3b46f788baa26a83567d77d)
+++ b/.idea/compiler.xml	(date 1712392028993)
@@ -8,6 +8,7 @@
         <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
         <outputRelativeToContentRoot value="true" />
         <module name="OfferWrite" />
+        <module name="EurekaServer" />
         <module name="OfferRead" />
         <module name="Gateway" />
       </profile>
@@ -15,6 +16,7 @@
   </component>
   <component name="JavacSettings">
     <option name="ADDITIONAL_OPTIONS_OVERRIDE">
+      <module name="EurekaServer" options="-parameters" />
       <module name="Gateway" options="-parameters" />
       <module name="OfferRead" options="-parameters" />
       <module name="OfferWrite" options="-parameters" />
Index: OfferRead/src/main/java/pl/rsww/offerread/offers/getting_offers/GetOffers.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OfferRead/src/main/java/pl/rsww/offerread/offers/getting_offers/GetOffers.java b/OfferRead/src/main/java/pl/rsww/offerread/offers/getting_offers/GetOffers.java
new file mode 100644
--- /dev/null	(date 1712386667132)
+++ b/OfferRead/src/main/java/pl/rsww/offerread/offers/getting_offers/GetOffers.java	(date 1712386667132)
@@ -0,0 +1,35 @@
+package pl.rsww.offerread.offers.getting_offers;
+
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.PageRequest;
+import org.springframework.lang.Nullable;
+
+public record GetOffers(
+  int pageNumber,
+  int pageSize
+) {
+  public GetOffers {
+    if (pageNumber < 0)
+      throw new IllegalArgumentException("Page number has to be a zero-based number");
+
+    if (pageSize < 0)
+      throw new IllegalArgumentException("Page size has to be a zero-based number");
+  }
+
+  public static GetOffers of(@Nullable Integer pageNumber, @Nullable Integer pageSize) {
+
+    return new GetOffers(
+      pageNumber != null ? pageNumber : 0,
+      pageSize != null ? pageSize : 20
+    );
+  }
+
+  public static Page<OfferShortInfo> handle(
+          OfferShortInfoRepository repository,
+          GetOffers query
+  ) {
+    return repository.findAll(
+      PageRequest.of(query.pageNumber(), query.pageSize())
+    );
+  }
+}
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Encoding\">\r\n    <file url=\"file://$PROJECT_DIR$/Gateway/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/OfferRead/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/OfferWrite/src/main/java\" charset=\"UTF-8\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
--- a/.idea/encodings.xml	(revision 2e9fb2837aa01a04b3b46f788baa26a83567d77d)
+++ b/.idea/encodings.xml	(date 1712392030787)
@@ -1,6 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/EurekaServer/src/main/java" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/Gateway/src/main/java" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/OfferRead/src/main/java" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/OfferWrite/src/main/java" charset="UTF-8" />
Index: OfferRead/src/main/java/pl/rsww/offerread/factory/KafkaConsumerFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OfferRead/src/main/java/pl/rsww/offerread/factory/KafkaConsumerFactory.java b/OfferRead/src/main/java/pl/rsww/offerread/factory/MyKafkaConsumerFactory.java
rename from OfferRead/src/main/java/pl/rsww/offerread/factory/KafkaConsumerFactory.java
rename to OfferRead/src/main/java/pl/rsww/offerread/factory/MyKafkaConsumerFactory.java
--- a/OfferRead/src/main/java/pl/rsww/offerread/factory/KafkaConsumerFactory.java	(revision 2e9fb2837aa01a04b3b46f788baa26a83567d77d)
+++ b/OfferRead/src/main/java/pl/rsww/offerread/factory/MyKafkaConsumerFactory.java	(date 1712390565742)
@@ -10,7 +10,7 @@
 @EnableKafka
 @Configuration
 @RequiredArgsConstructor
-public class KafkaConsumerFactory {
+public class MyKafkaConsumerFactory {
     private final ConsumerFactory<OfferingEvent> consumerFactory;
 
     @Bean
Index: OfferWrite/src/main/java/pl/rsww/offerwrite/hotels/HotelConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OfferWrite/src/main/java/pl/rsww/offerwrite/hotels/HotelConfig.java b/OfferWrite/src/main/java/pl/rsww/offerwrite/hotels/HotelConfig.java
new file mode 100644
--- /dev/null	(date 1712389360296)
+++ b/OfferWrite/src/main/java/pl/rsww/offerwrite/hotels/HotelConfig.java	(date 1712389360296)
@@ -0,0 +1,23 @@
+package pl.rsww.offerwrite.hotels;
+
+import com.eventstore.dbclient.EventStoreDBClient;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.web.context.annotation.ApplicationScope;
+import pl.rsww.offerwrite.core.aggregates.AggregateStore;
+
+import java.util.UUID;
+
+@Configuration
+public class HotelConfig {
+
+    @Bean
+    @ApplicationScope
+    AggregateStore<Hotel, HotelEvent, UUID> hotelStore(EventStoreDBClient eventStore) {
+        return new AggregateStore<>(
+                eventStore,
+                Hotel::mapToStreamId,
+                Hotel::empty
+        );
+    }
+}
Index: Gateway/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Gateway/src/main/resources/application.properties b/Gateway/src/main/resources/application.yml
rename from Gateway/src/main/resources/application.properties
rename to Gateway/src/main/resources/application.yml
--- a/Gateway/src/main/resources/application.properties	(revision 2e9fb2837aa01a04b3b46f788baa26a83567d77d)
+++ b/Gateway/src/main/resources/application.yml	(date 1712391045925)
@@ -1,1 +1,39 @@
-spring.application.name=Gateway
+spring:
+  application:
+    name: Gateway
+  cloud:
+    gateway:
+      globalcors:
+        corsConfigurations:
+          '[/**]':
+            allowedOrigins: '*'
+            allowedMethods: '*'
+      discovery:
+        locator:
+          enabled: true
+          lower-case-service-id: true
+      routes:
+        - id: OFFERS_READ
+          uri: lb://offer_read
+          predicates:
+            - Path=/offers/**
+          filters:
+          #            - TokenRelay=
+        - id: NOTIFICATIONS
+          uri: lb://payment
+          predicates:
+            - Path=/ws/**, /notifications/**
+          filters:
+          #            - TokenRelay=
+        - id: ORDERS
+          uri: lb://order
+          predicates:
+            - Path=/orders/**
+          filters:
+#            - TokenRelay=
+        - id: PAYMENTS
+          uri: lb://payments
+          predicates:
+            - Path=/payments/**
+          filters:
+      #            - TokenRelay=
Index: docker-compose.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>version: '3'\r\nservices:\r\n  offer_read:\r\n    container_name: offer_read\r\n    build:\r\n      context: ./OfferRead\r\n      dockerfile: ./Dockerfile\r\n    environment:\r\n      SPRING_PROFILES_ACTIVE: local\r\n      SPRING_DATA_MONGODB_HOST: mongo_read_model\r\n      SPRING_DATA_MONGODB_PORT: 27017\r\n      SPRING_DATA_MONGODB_DATABASE: read_model\r\n    ports:\r\n      - \"8081:8080\"\r\n      - \"5081:5005\"\r\n    depends_on:\r\n      - mongo_read_model\r\n    networks:\r\n      - my-network\r\n  mongo_read_model:\r\n    container_name: mongo_read_model\r\n    image: mongo:7.0.7\r\n    restart: always\r\n    environment:\r\n      MONGO_INITDB_ROOT_USERNAME: admin\r\n      MONGO_INITDB_ROOT_PASSWORD: admin\r\n      MONGO_INITDB_DATABASE: read_model\r\n    ports:\r\n      - \"27017:27017\"\r\n    volumes:\r\n      - db:/data/db\r\n    networks:\r\n      - my-network\r\n  mongo-express:\r\n    image: mongo-express\r\n    restart: always\r\n    ports:\r\n      - \"8089:8081\"\r\n    environment:\r\n      ME_CONFIG_MONGODB_ADMINUSERNAME: admin\r\n      ME_CONFIG_MONGODB_ADMINPASSWORD: admin\r\n      ME_CONFIG_MONGODB_AUTH_DATABASE: read_model\r\n      ME_CONFIG_MONGODB_URL: mongodb://admin:admin@mongo_read_model:27017/\r\n    networks:\r\n      - my-network\r\nvolumes:\r\n  db:\r\nnetworks:\r\n  my-network:\r\n    driver: bridge
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/docker-compose.yml b/docker-compose.yml
--- a/docker-compose.yml	(revision 2e9fb2837aa01a04b3b46f788baa26a83567d77d)
+++ b/docker-compose.yml	(date 1712398131794)
@@ -1,22 +1,60 @@
 version: '3'
 services:
+  frontend:
+    container_name: frontend
+    build:
+      context: Frontend
+      dockerfile: ./Dockerfile
+    ports:
+      - "4200:8080"
+    networks:
+      - rsww-network
+  gateway:
+    container_name: gateway
+    build:
+      context: ./Gateway
+      dockerfile: ./Dockerfile
+    ports:
+      - "8080:8080"
+      - "5080:5005"
+    networks:
+      - rsww-network
+  eureka_server:
+    container_name: eureka_server
+    build:
+      context: ./EurekaServer
+      dockerfile: ./Dockerfile
+    ports:
+      - "8761:8761"
+      - "5761:5005"
+    networks:
+      - rsww-network
+  offer_write:
+    container_name: offer_write
+    build:
+      context: ./OfferWrite
+      dockerfile: ./Dockerfile
+    ports:
+      - "8082:8080"
+      - "5082:5005"
+    networks:
+      - rsww-network
   offer_read:
     container_name: offer_read
     build:
       context: ./OfferRead
       dockerfile: ./Dockerfile
     environment:
-      SPRING_PROFILES_ACTIVE: local
       SPRING_DATA_MONGODB_HOST: mongo_read_model
       SPRING_DATA_MONGODB_PORT: 27017
-      SPRING_DATA_MONGODB_DATABASE: read_model
+      SPRING_DATA_MONGODB_DATABASE: offer_read_model
     ports:
       - "8081:8080"
       - "5081:5005"
     depends_on:
       - mongo_read_model
     networks:
-      - my-network
+      - rsww-network
   mongo_read_model:
     container_name: mongo_read_model
     image: mongo:7.0.7
@@ -24,13 +62,12 @@
     environment:
       MONGO_INITDB_ROOT_USERNAME: admin
       MONGO_INITDB_ROOT_PASSWORD: admin
-      MONGO_INITDB_DATABASE: read_model
     ports:
       - "27017:27017"
     volumes:
-      - db:/data/db
+      - mongo_read_db:/data/db
     networks:
-      - my-network
+      - rsww-network
   mongo-express:
     image: mongo-express
     restart: always
@@ -42,9 +79,62 @@
       ME_CONFIG_MONGODB_AUTH_DATABASE: read_model
       ME_CONFIG_MONGODB_URL: mongodb://admin:admin@mongo_read_model:27017/
     networks:
-      - my-network
-volumes:
-  db:
+      - rsww-network
+  event-store:
+    image: eventstore/eventstore
+    # use this image if you're running ARM-based proc like Apple M1
+    # image: eventstore/eventstore:22.10.0-alpha-arm64v8
+    environment:
+      - EVENTSTORE_CLUSTER_SIZE=1
+      - EVENTSTORE_RUN_PROJECTIONS=All
+      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
+      - EVENTSTORE_HTTP_PORT=2113
+      - EVENTSTORE_INSECURE=true
+      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
+    ports:
+      - '1113:1113'
+      - '2113:2113'
+    volumes:
+      - type: volume
+        source: eventstore-volume-data
+        target: /var/lib/eventstore
+      - type: volume
+        source: eventstore-volume-logs
+        target: /var/log/eventstore
+  zookeeper:
+    container_name: zookeeper
+    hostname: zookeeper
+    image: 'zookeeper:3.8.2'
+    ports:
+      - '2181:2181'
+    environment:
+      ZOOKEEPER_CLIENT_PORT: 2181
+    networks:
+      - rsww-network
+  kafka:
+    image: 'bitnami/kafka:3.5.1'
+    container_name: kafka
+    hostname: kafka
+    depends_on:
+      - zookeeper
+    ports:
+      - "29092:29092"
+    environment:
+      KAFKA_BROKER_ID: 1
+      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
+      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
+      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
+      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
+      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
+      KAFKA_MAX_REQUEST_SIZE: 20971520
+      KAFKA_CFG_MAX_REQUEST_SIZE: 20971520
+      KAFKA_CFG_PRODUCER_MAX_REQUEST_SIZE: 20971520
+    networks:
+      - rsww-network
+volumes:
+  mongo_read_db:
+  eventstore-volume-data:
+  eventstore-volume-logs:
 networks:
-  my-network:
+  rsww-network:
     driver: bridge
\ No newline at end of file
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"InspectionProjectProfileManager\">\r\n  <profile version=\"1.0\">\r\n    <option name=\"myName\" value=\"Project Default\" />\r\n    <inspection_tool class=\"Eslint\" enabled=\"true\" level=\"WARNING\" enabled_by_default=\"true\" />\r\n    <inspection_tool class=\"HtmlUnknownTag\" enabled=\"true\" level=\"WARNING\" enabled_by_default=\"true\">\r\n      <option name=\"myValues\">\r\n        <value>\r\n          <list size=\"7\">\r\n            <item index=\"0\" class=\"java.lang.String\" itemvalue=\"nobr\" />\r\n            <item index=\"1\" class=\"java.lang.String\" itemvalue=\"noembed\" />\r\n            <item index=\"2\" class=\"java.lang.String\" itemvalue=\"comment\" />\r\n            <item index=\"3\" class=\"java.lang.String\" itemvalue=\"noscript\" />\r\n            <item index=\"4\" class=\"java.lang.String\" itemvalue=\"embed\" />\r\n            <item index=\"5\" class=\"java.lang.String\" itemvalue=\"script\" />\r\n            <item index=\"6\" class=\"java.lang.String\" itemvalue=\"numberrangepicker\" />\r\n          </list>\r\n        </value>\r\n      </option>\r\n      <option name=\"myCustomValuesEnabled\" value=\"true\" />\r\n    </inspection_tool>\r\n  </profile>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
--- a/.idea/inspectionProfiles/Project_Default.xml	(revision 2e9fb2837aa01a04b3b46f788baa26a83567d77d)
+++ b/.idea/inspectionProfiles/Project_Default.xml	(date 1712386756954)
@@ -2,21 +2,5 @@
   <profile version="1.0">
     <option name="myName" value="Project Default" />
     <inspection_tool class="Eslint" enabled="true" level="WARNING" enabled_by_default="true" />
-    <inspection_tool class="HtmlUnknownTag" enabled="true" level="WARNING" enabled_by_default="true">
-      <option name="myValues">
-        <value>
-          <list size="7">
-            <item index="0" class="java.lang.String" itemvalue="nobr" />
-            <item index="1" class="java.lang.String" itemvalue="noembed" />
-            <item index="2" class="java.lang.String" itemvalue="comment" />
-            <item index="3" class="java.lang.String" itemvalue="noscript" />
-            <item index="4" class="java.lang.String" itemvalue="embed" />
-            <item index="5" class="java.lang.String" itemvalue="script" />
-            <item index="6" class="java.lang.String" itemvalue="numberrangepicker" />
-          </list>
-        </value>
-      </option>
-      <option name="myCustomValuesEnabled" value="true" />
-    </inspection_tool>
   </profile>
 </component>
\ No newline at end of file
Index: OfferWrite/Dockerfile
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OfferWrite/Dockerfile b/OfferWrite/Dockerfile
new file mode 100644
--- /dev/null	(date 1712387449621)
+++ b/OfferWrite/Dockerfile	(date 1712387449621)
@@ -0,0 +1,29 @@
+FROM maven:3.9.6-eclipse-temurin-22-jammy AS DEPS
+ENV HOME=/usr/src/app
+ENV SERVICE=OfferWrite
+WORKDIR $HOME
+COPY pom.xml $HOME/pom.xml
+RUN mvn dependency:go-offline -pl :${SERVICE}
+
+FROM maven:3.9.6-eclipse-temurin-22 AS BUILDER
+ENV HOME=/usr/src/app
+ENV SERVICE=OfferWrite
+
+WORKDIR $HOME
+
+COPY --from=deps /root/.m2/ /root/.m2/
+COPY --from=deps $home/ $home/
+
+COPY . $HOME/
+
+RUN mvn package -T 1.5C -am -q -pl :${SERVICE}
+
+FROM openjdk:22 AS BUILD
+ENV HOME=/usr/src/app
+ENV SERVICE=OfferWrite
+
+COPY --from=builder $HOME/target/${SERVICE}.jar /app/${SERVICE}.jar
+WORKDIR /app
+EXPOSE 8080
+EXPOSE 5005
+ENTRYPOINT java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005  -jar ${SERVICE}.jar
\ No newline at end of file
Index: OfferRead/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-parent</artifactId>\r\n        <version>3.2.4</version>\r\n        <relativePath/> <!-- lookup parent from repository -->\r\n    </parent>\r\n    <groupId>pl.rsww</groupId>\r\n    <artifactId>OfferRead</artifactId>\r\n    <version>0.0.1-SNAPSHOT</version>\r\n    <name>OfferRead</name>\r\n    <description>OfferRead</description>\r\n    <properties>\r\n        <java.version>22</java.version>\r\n    </properties>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-test</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.kafka</groupId>\r\n            <artifactId>spring-kafka</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-data-mongodb</artifactId>\r\n            <version>3.2.4</version>\r\n        </dependency>\r\n\r\n    </dependencies>\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OfferRead/pom.xml b/OfferRead/pom.xml
--- a/OfferRead/pom.xml	(revision 2e9fb2837aa01a04b3b46f788baa26a83567d77d)
+++ b/OfferRead/pom.xml	(date 1712387683858)
@@ -47,6 +47,7 @@
     </dependencies>
 
     <build>
+        <finalName>OfferRead</finalName>
         <plugins>
             <plugin>
                 <groupId>org.springframework.boot</groupId>
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectModuleManager\">\r\n    <modules>\r\n      <module fileurl=\"file://$PROJECT_DIR$/.idea/Projekt.iml\" filepath=\"$PROJECT_DIR$/.idea/Projekt.iml\" />\r\n      <module fileurl=\"file://$PROJECT_DIR$/frontend.iml\" filepath=\"$PROJECT_DIR$/frontend.iml\" />\r\n    </modules>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
--- a/.idea/modules.xml	(revision 2e9fb2837aa01a04b3b46f788baa26a83567d77d)
+++ b/.idea/modules.xml	(date 1712391855847)
@@ -3,7 +3,6 @@
   <component name="ProjectModuleManager">
     <modules>
       <module fileurl="file://$PROJECT_DIR$/.idea/Projekt.iml" filepath="$PROJECT_DIR$/.idea/Projekt.iml" />
-      <module fileurl="file://$PROJECT_DIR$/frontend.iml" filepath="$PROJECT_DIR$/frontend.iml" />
     </modules>
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/OfferRead/pom.xml\" />\r\n        <option value=\"$PROJECT_DIR$/OfferWrite/pom.xml\" />\r\n        <option value=\"$PROJECT_DIR$/Gateway/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_19\" project-jdk-name=\"openjdk-22\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"jpab\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 2e9fb2837aa01a04b3b46f788baa26a83567d77d)
+++ b/.idea/misc.xml	(date 1712391941266)
@@ -1,19 +1,21 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="FrameworkDetectionExcludesConfiguration">
+    <file type="web" url="file://$PROJECT_DIR$/EurekaServer" />
+  </component>
   <component name="MavenProjectsManager">
     <option name="originalFiles">
       <list>
+        <option value="$PROJECT_DIR$/Gateway/pom.xml" />
         <option value="$PROJECT_DIR$/OfferRead/pom.xml" />
         <option value="$PROJECT_DIR$/OfferWrite/pom.xml" />
-        <option value="$PROJECT_DIR$/Gateway/pom.xml" />
+        <option value="$PROJECT_DIR$/EurekaServer/pom.xml" />
       </list>
     </option>
+    <option name="workspaceImportForciblyTurnedOn" value="true" />
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_19" project-jdk-name="openjdk-22" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_X" default="true" project-jdk-name="22" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
-  <component name="ProjectType">
-    <option name="id" value="jpab" />
-  </component>
 </project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\r\n    <mapping directory=\"$PROJECT_DIR$/frontend\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision 2e9fb2837aa01a04b3b46f788baa26a83567d77d)
+++ b/.idea/vcs.xml	(date 1712398290828)
@@ -1,7 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/frontend" vcs="Git" />
+    <mapping directory="" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: Gateway/Dockerfile
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Gateway/Dockerfile b/Gateway/Dockerfile
new file mode 100644
--- /dev/null	(date 1712387653037)
+++ b/Gateway/Dockerfile	(date 1712387653037)
@@ -0,0 +1,29 @@
+FROM maven:3.9.6-eclipse-temurin-22-jammy AS DEPS
+ENV HOME=/usr/src/app
+ENV SERVICE=Gateway
+WORKDIR $HOME
+COPY pom.xml $HOME/pom.xml
+RUN mvn dependency:go-offline -pl :${SERVICE}
+
+FROM maven:3.9.6-eclipse-temurin-22 AS BUILDER
+ENV HOME=/usr/src/app
+ENV SERVICE=Gateway
+
+WORKDIR $HOME
+
+COPY --from=deps /root/.m2/ /root/.m2/
+COPY --from=deps $home/ $home/
+
+COPY . $HOME/
+
+RUN mvn package -T 1.5C -am -q -pl :${SERVICE}
+
+FROM openjdk:22 AS BUILD
+ENV HOME=/usr/src/app
+ENV SERVICE=Gateway
+
+COPY --from=builder $HOME/target/${SERVICE}.jar /app/${SERVICE}.jar
+WORKDIR /app
+EXPOSE 8080
+EXPOSE 5005
+ENTRYPOINT java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005  -jar ${SERVICE}.jar
\ No newline at end of file
Index: OfferRead/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.application.name=OfferRead\r\nserver.port=8081\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/OfferRead/src/main/resources/application.properties b/OfferRead/src/main/resources/application.properties
--- a/OfferRead/src/main/resources/application.properties	(revision 2e9fb2837aa01a04b3b46f788baa26a83567d77d)
+++ b/OfferRead/src/main/resources/application.properties	(date 1712390755501)
@@ -1,2 +1,8 @@
 spring.application.name=OfferRead
 server.port=8081
+spring.data.mongodb.host=localhost
+spring.data.mongodb.port=27017
+spring.data.mongodb.database=offer_read_model
+spring.kafka.bootstrap-servers= kafka:9092
+spring.kafka.group-id= offer
+
Index: Gateway/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-parent</artifactId>\r\n        <version>3.2.4</version>\r\n        <relativePath/> <!-- lookup parent from repository -->\r\n    </parent>\r\n    <groupId>pl.rsww</groupId>\r\n    <artifactId>Gateway</artifactId>\r\n    <version>0.0.1-SNAPSHOT</version>\r\n    <name>Gateway</name>\r\n    <description>Gateway</description>\r\n    <properties>\r\n        <java.version>22</java.version>\r\n    </properties>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-webflux</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-test</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.projectreactor</groupId>\r\n            <artifactId>reactor-test</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.cloud</groupId>\r\n            <artifactId>spring-cloud-starter-gateway</artifactId>\r\n            <version>4.1.2</version>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Gateway/pom.xml b/Gateway/pom.xml
--- a/Gateway/pom.xml	(revision 2e9fb2837aa01a04b3b46f788baa26a83567d77d)
+++ b/Gateway/pom.xml	(date 1712387653028)
@@ -40,6 +40,7 @@
     </dependencies>
 
     <build>
+        <finalName>Gateway</finalName>
         <plugins>
             <plugin>
                 <groupId>org.springframework.boot</groupId>
Index: OfferRead/Dockerfile
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OfferRead/Dockerfile b/OfferRead/Dockerfile
new file mode 100644
--- /dev/null	(date 1712387683866)
+++ b/OfferRead/Dockerfile	(date 1712387683866)
@@ -0,0 +1,29 @@
+FROM maven:3.9.6-eclipse-temurin-22-jammy AS DEPS
+ENV HOME=/usr/src/app
+ENV SERVICE=OfferRead
+WORKDIR $HOME
+COPY pom.xml $HOME/pom.xml
+RUN mvn dependency:go-offline -pl :${SERVICE}
+
+FROM maven:3.9.6-eclipse-temurin-22 AS BUILDER
+ENV HOME=/usr/src/app
+ENV SERVICE=OfferRead
+
+WORKDIR $HOME
+
+COPY --from=deps /root/.m2/ /root/.m2/
+COPY --from=deps $home/ $home/
+
+COPY . $HOME/
+
+RUN mvn package -T 1.5C -am -q -pl :${SERVICE}
+
+FROM openjdk:22 AS BUILD
+ENV HOME=/usr/src/app
+ENV SERVICE=OfferRead
+
+COPY --from=builder $HOME/target/${SERVICE}.jar /app/${SERVICE}.jar
+WORKDIR /app
+EXPOSE 8080
+EXPOSE 5005
+ENTRYPOINT java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005  -jar ${SERVICE}.jar
\ No newline at end of file
Index: OfferWrite/src/main/java/pl/rsww/offerwrite/core/config/EventStoreDBConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OfferWrite/src/main/java/pl/rsww/offerwrite/core/config/EventStoreDBConfig.java b/OfferWrite/src/main/java/pl/rsww/offerwrite/core/config/EventStoreDBConfig.java
new file mode 100644
--- /dev/null	(date 1712388935798)
+++ b/OfferWrite/src/main/java/pl/rsww/offerwrite/core/config/EventStoreDBConfig.java	(date 1712388935798)
@@ -0,0 +1,24 @@
+package pl.rsww.offerwrite.core.config;
+
+import com.eventstore.dbclient.EventStoreDBClient;
+import com.eventstore.dbclient.EventStoreDBClientSettings;
+import com.eventstore.dbclient.EventStoreDBConnectionString;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.context.annotation.Scope;
+
+@Configuration
+class EventStoreDBConfig {
+  @Bean
+  @Scope("singleton")
+  EventStoreDBClient eventStoreDBClient(@Value("${esdb.connectionstring}") String connectionString) {
+    try {
+      EventStoreDBClientSettings settings = EventStoreDBConnectionString.parseOrThrow(connectionString);
+
+      return EventStoreDBClient.create(settings);
+    } catch (Throwable e) {
+      throw new RuntimeException(e);
+    }
+  }
+}
Index: OfferWrite/src/main/java/pl/rsww/offerwrite/core/config/CoreConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OfferWrite/src/main/java/pl/rsww/offerwrite/core/config/CoreConfig.java b/OfferWrite/src/main/java/pl/rsww/offerwrite/core/config/CoreConfig.java
new file mode 100644
--- /dev/null	(date 1712388822953)
+++ b/OfferWrite/src/main/java/pl/rsww/offerwrite/core/config/CoreConfig.java	(date 1712388822953)
@@ -0,0 +1,22 @@
+package pl.rsww.offerwrite.core.config;
+
+import com.fasterxml.jackson.databind.ObjectMapper;
+import org.springframework.context.ApplicationEventPublisher;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import pl.rsww.offerwrite.core.events.EventBus;
+import pl.rsww.offerwrite.core.events.EventForwarder;
+import pl.rsww.offerwrite.core.serialization.EventSerializer;
+
+@Configuration
+class CoreConfig {
+  @Bean
+  ObjectMapper defaultJSONMapper() {
+    return EventSerializer.mapper;
+  }
+
+  @Bean
+  EventBus eventBus(ApplicationEventPublisher applicationEventPublisher) {
+    return new EventForwarder(applicationEventPublisher);
+  }
+}
Index: OfferWrite/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-parent</artifactId>\r\n        <version>3.2.4</version>\r\n        <relativePath/> <!-- lookup parent from repository -->\r\n    </parent>\r\n    <groupId>pl.rsww</groupId>\r\n    <artifactId>OfferWrite</artifactId>\r\n    <version>0.0.1-SNAPSHOT</version>\r\n    <name>OfferWrite</name>\r\n    <description>OfferWrite</description>\r\n    <properties>\r\n        <java.version>22</java.version>\r\n    </properties>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.kafka</groupId>\r\n            <artifactId>spring-kafka</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-test</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.eventstore</groupId>\r\n            <artifactId>db-client-java</artifactId>\r\n            <version>5.3.2</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>jakarta.persistence</groupId>\r\n            <artifactId>jakarta.persistence-api</artifactId>\r\n            <version>3.2.0-M2</version>\r\n        </dependency>\r\n\r\n    </dependencies>\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OfferWrite/pom.xml b/OfferWrite/pom.xml
--- a/OfferWrite/pom.xml	(revision 2e9fb2837aa01a04b3b46f788baa26a83567d77d)
+++ b/OfferWrite/pom.xml	(date 1712387470458)
@@ -53,6 +53,7 @@
     </dependencies>
 
     <build>
+        <finalName>OfferWrite</finalName>
         <plugins>
             <plugin>
                 <groupId>org.springframework.boot</groupId>
Index: OfferWrite/src/main/java/pl/rsww/offerwrite/hotels/Hotel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package pl.rsww.offerwrite.hotels;\r\n\r\nimport pl.rsww.offerwrite.core.aggregates.AbstractAggregate;\r\n\r\nimport java.util.UUID;\r\n\r\npublic class Hotel extends AbstractAggregate<HotelEvent, UUID> {\r\n\r\n    @Override\r\n    public void when(HotelEvent hotelEvent) {\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OfferWrite/src/main/java/pl/rsww/offerwrite/hotels/Hotel.java b/OfferWrite/src/main/java/pl/rsww/offerwrite/hotels/Hotel.java
--- a/OfferWrite/src/main/java/pl/rsww/offerwrite/hotels/Hotel.java	(revision 2e9fb2837aa01a04b3b46f788baa26a83567d77d)
+++ b/OfferWrite/src/main/java/pl/rsww/offerwrite/hotels/Hotel.java	(date 1712389216158)
@@ -9,5 +9,13 @@
     @Override
     public void when(HotelEvent hotelEvent) {
 
+    }
+
+    public static Hotel empty() {
+        return new Hotel();
+    }
+
+    static String mapToStreamId(UUID shoppingCartId) {
+        return "Hotel-%s".formatted(shoppingCartId);
     }
 }
Index: OfferWrite/src/main/java/pl/rsww/offerwrite/hotels/HotelService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package pl.rsww.offerwrite.hotels;\r\n\r\nimport lombok.RequiredArgsConstructor;\r\nimport org.springframework.stereotype.Service;\r\nimport pl.rsww.offerwrite.core.aggregates.AggregateStore;\r\n\r\nimport java.util.UUID;\r\n\r\n@Service\r\n@RequiredArgsConstructor\r\npublic class HotelService {\r\n    private final AggregateStore<Hotel, HotelEvent, UUID> store;\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OfferWrite/src/main/java/pl/rsww/offerwrite/hotels/HotelService.java b/OfferWrite/src/main/java/pl/rsww/offerwrite/hotels/HotelService.java
--- a/OfferWrite/src/main/java/pl/rsww/offerwrite/hotels/HotelService.java	(revision 2e9fb2837aa01a04b3b46f788baa26a83567d77d)
+++ b/OfferWrite/src/main/java/pl/rsww/offerwrite/hotels/HotelService.java	(date 1712389333072)
@@ -9,7 +9,9 @@
 @Service
 @RequiredArgsConstructor
 public class HotelService {
-    private final AggregateStore<Hotel, HotelEvent, UUID> store;
+    private final AggregateStore<Hotel, HotelEvent, UUID> hotelStore;
 
+    void test() {
 
+    }
 }
Index: OfferWrite/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.application.name=OfferWrite\r\nserver.port=8082
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/OfferWrite/src/main/resources/application.properties b/OfferWrite/src/main/resources/application.properties
--- a/OfferWrite/src/main/resources/application.properties	(revision 2e9fb2837aa01a04b3b46f788baa26a83567d77d)
+++ b/OfferWrite/src/main/resources/application.properties	(date 1712388644727)
@@ -1,2 +1,3 @@
 spring.application.name=OfferWrite
-server.port=8082
\ No newline at end of file
+server.port=8082
+esdb.connectionstring=esdb://localhost:2113?tls=false
\ No newline at end of file
